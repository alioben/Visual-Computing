import java.util.*;
static class CWComparator implements Comparator<PVector> {
PVector center;
public CWComparator(PVector center) {
this.center = center;
}
@Override
public int compare(PVector b, PVector d) {
if(Math.atan2(b.y-center.y,b.x-center.x)<Math.atan2(d.y-center.y,d.x-center.x))
return -1;
else return 1;
}
}
public static List<PVector> sortCorners(List<PVector> quad){
// Sort corners so that they are ordered clockwise
PVector a = quad.get(0);
PVector b = quad.get(2);
PVector center = new PVector((a.x+b.x)/2,(a.y+b.y)/2);
Collections.sort(quad,new CWComparator(center));
  int closestIndex = 0;
    double closestDistance= Math.sqrt(quad.get(0).x * quad.get(0).x + quad.get(0).y * quad.get(0).y);
    for (int i = 1; i < 4; i++) {
        double distance = Math.sqrt(quad.get(i).x * quad.get(i).x + quad.get(i).y * quad.get(i).y);
        if (distance < closestDistance) {
            closestDistance = distance;
            closestIndex = i;
        }
    }
    Collections.rotate(quad, -closestIndex);
return quad;
}